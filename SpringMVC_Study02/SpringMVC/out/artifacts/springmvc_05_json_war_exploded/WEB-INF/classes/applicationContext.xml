<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd

       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!-- 自动扫描包，让所有指定包下的注解生效，并且由ioc容器统一管理 -->
    <context:component-scan base-package="com.zhao.controller"/>

    <!-- 设置SpringMVC不处理静态资源 -->
    <mvc:default-servlet-handler/>

    <!--
        支持mvc注解驱动：
            在spring中一般采用@RequestMapping注解来完成映射的关系，

            要想使@RequestMapping注解生效，必须在context中注册DefaultAnnotationHandlerMapping
            以及一个AnnotationMethodHandlerAdapter实例
            这两个实例分别在类级别和方法级别处理。

            而我们的annotation-driven配置帮助我们自动完成上述两个实例的注入。
    -->

    <!-- 驱动中为springmvc自带解决一切json乱码的配置 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="utf-8"/>
            </bean>

            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 配置后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>